
---

- hosts: webserver
  gather_facts: no
  # become: yes
  # become_user: "{{ app_run_user }}"

  tasks:
    - template:
        src: environment.j2
        dest: "{{ bts_tatar_env_file }}"
      tags: env

    - name: download bts_tatar
      docker_image:
        name: "{{ bts_tatar_docker_image }}"
        force: yes
      tags: [app]

    - name: download postgres
      docker_image:
        name: postgres
        force: yes
      tags: [postgres]

    - name: start postgres
      docker_container:
        recreate: yes
        name: postgres
        image: postgres
        state: started
        restart_policy: always
        env_file: "{{ bts_tatar_env_file }}"
        networks:
          - name: "{{ bts_tatar_docker_network }}"
      tags: [postgres]

    - name: start app
      docker_container:
        recreate: yes
        name: app
        image: "{{ bts_tatar_docker_image }}"
        state: started
        command: make server
        restart_policy: always
        env_file: "{{ bts_tatar_env_file }}"
        ports:
          - "{{ bts_tatar_port }}:3000"
        networks:
          - name: "{{ bts_tatar_docker_network }}"
      tags: [app]

  post_tasks:
    - name: notify slack
      local_action:
          module: slack
          domain: rabinzon.slack.com
          token: "{{ slack_token }}"
          msg: "bts.tatar deploy completed ðŸš€"
          channel: "#operation"
          username: "{{ ansible_ssh_user }}"
      run_once: true
